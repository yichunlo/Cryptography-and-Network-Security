code4.py:
$python3 code4.py
其中round 3, round 4, round 5需要手動輸入：
round 3輸入一組數字，round 4輸入答案的句子，round 5輸入一組數字，以選擇正確答案。

==========================================================================

code5.py:
$python3 code5.py
會直接看到D1, D2, D3, a0, flag
related file: D1, D2, D3

==========================================================================

code6-1.py:
$python3 code6-1.py

因為這題時間有限，把第一個flag跟第二三個flag分開去拿。
由於每次破解一個新的字元就會印出當前的字串，因此會有種被貓貓佔滿的快感。

code6-23.py:
$python3 code6-23.py

在修改修改前三個bytes時，其實原本是從128開始慢慢嘗試的，後來找到後偷懶直接
使用找到的可行結果。之所以從128開始是因為前三個bytes修改前分別為11010011、
11011101、11110011，這樣XOR完才有可能避免掉unicode decode error。

==========================================================================

code7.py:
$python3 code7.py

如果沒有sympy這個套件的話，可能需要下載：
$pip3 install sympy
這個目的是拿來找乘法反元素。如果python是3.8的話可以將第四十行:
sympy.mod_inverse(50, n)改成pow(50, -1, n)，就可以直接運算而不用下載sympy。

==========================================================================

code8.py:
$python3 code8.py

直接獲得key就知道所有事情了，搜集封包的過程蠻花時間的，這份code有整段註解就
是在做搜集封包這件事情，我已經把結果附在資料夾裡了，直接使用就好。
related file: WEP_result.csv


